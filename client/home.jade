template(name='home')
    .ui.stackable.grid.home(class=omega_dark_mode_class)
        .sixteen.wide.center.aligned.column
            each omega_doc.selected_tags
                button.ui.active.compact.large.circular.yeah.button.unselect_tag(tabindex='0' class=omega_dark_mode_class)
                    //- i.remove.icon
                    | #{this}
            .ui.left.icon.search.input
                unless is_loading
                    i.search.link.icon.refresh_agg
                if is_loading
                    i.yin.yang.large.loading.large.icon
                input#search(type='text' autofocus='' autocomplete="off" value=omega_doc.current_query)
            //- .scrolling.forty
            //- .ui.header #{connection.status}
            i.brain.yellow.link.big.icon.get_top_emotion
            unless connected
                //- .ui.inline.header disconnected
                //- .ui.hidden.divider
                i.lightning.yellow.link.big.icon.reconnect
            if connected
                //- unless selected_tags
                //-     i.huge.yin.yang.black.icon
                //- i.grey.lightbulb.link.icon
                unless omega_doc.selected_tags
                    //- .ui.hidden.divider
                    //- .ui.center.aligned.basic.segment
                        if omega_doc.dark_mode
                            i.massive.loading.yin.yang.grey.link.icon.pick_dao
                        else
                            i.massive.loading.yin.yang.grey.link.icon.pick_dao
                //- if selected_tags
                //-     .ui.icon.black.compact.button.clear_selected_tags
                //-         i.remove.icon
                //- div
                //- if selected_tags_plural
                //- each omega_doc.agg
                //- .ui.header current most emotion #{omega_doc.current_most_emotion}
                //- .ui.inline.header #{omega_doc.emotion_color}
                .ui.inline.header #{omega_doc.max_emotion_name}
                .ui.inline.header #{omega_doc.current_most_emotion}
                .ui.inline.header {{fixed omega_doc.current_max_emotion_percent}}%
                each omega_doc.filtered_agg_res
                    button.ui.compact.basic.large.circular.button.result(tabindex="0" class=emotion_color title=count)
                        strong #{title}
                        //- small #{count}
                    //- button.ui.compact.white.basic.huge.button.result(tabindex="0" class=result_class title=count) #{title}
                //- .ui.hidden.divider
            //- if one_post
        //- .centered.one.column.row
        //- each omega_doc.doc_results
        //- each omega_doc_results
        //- .eight.wide.column.scrolling
        //-     each omega_doc.doc_result_ids
        //-         +doc_item
        //- if selected_tags
        //-     //- .scrolling.sixty
        //-     .ui.stackable.padded.grid
        //-         .four.column.row
        //-             each docs
        //-                 .column
                            //- +doc_item
        //-                     .ui.hidden.divider
        //-         .sixteen.wide.greecolumn
        //-             |hi
        //- .ui.centered.doubling.cards
        //-     each docs
        //-         //- .ui.fitted.hidden.divider
        //-         +doc_item
        .six.wide.column.scrolling
            each omega_doc.doc_result_ids
                +doc_item
        .ten.wide.column.scrolling
            //- .ui.header #{omega_doc.selected_doc_id}
            with selected_doc
                //- .ui.header selected doc
                //- img.ui.image.rounded(src=url class=omega_dark_mode_class)
                if is_image   
                    img.ui.left.floated.image.rounded(src=url class=omega_dark_mode_class)
                else
                    if has_thumbnail
                        //- img.ui.left.floated.middle.aligned.image.rounded(src=url class=omega_dark_mode_class)
                        img.ui.left.floated.image.rounded(src=thumbnail class=omega_dark_mode_class)
                .ui.header 
                    //- img.ui.image.rounded(src=url class=omega_dark_mode_class)
                    //- if has_thumbnail   

                    |#{title}
                if watson
                    +doc_emotion
                a.ui.icon.circular.button(href=url target="_blank")
                    i.external.large.icon
                //- a.ui.tertiary.grey.basic.button(href="https://www.reddit.com/r/#{subreddit}" target="_blank")
                //-     i.reddit.icon
                //-     |r/#{subreddit}
                if publish_when
                    .ui.small.grey.tertiary.button
                        i.calendar.icon
                        //- |#{watson.metadata.publication_date}
                        |#{publish_when}
                .ui.tertiary.grey.basic.button.toggle_domain(title='add domain')
                    i.globe.icon
                    |#{domain}
                a.ui.tertiary.grey.basic.button(href="https://www.reddit.com/#{permalink}" target="_blank")
                    i.chat.outline.icon
                    |#{comment_count}
                    
                //- if watson
                //-     +doc_emotion
                //- div
                if key_value_is 'model' 'reddit'
                    if reddit_id
                        unless rd
                            //- div
                            .ui.icon.basic.big.button.pull_post
                                i.reddit.large.icon
                    //- unless watson
                    .ui.icon.basic.button.call_watson
                        i.dna.large.icon
                    //- if dev 
                    //-     i.code.link.icon.print_me
                    
                    //- a.ui.tertiary.grey.basic.small.button(href="https://www.reddit.com/user/#{author}" target="_blank")
                    //-     i.user.outline.icon
                    //-     |#{author}
                .ui.icon.circular.button.vote_up(title=points)
                    i.thumbs.up.large.outline.grey.icon
                | #{points}
                .ui.icon.circular.button.vote_down(title=points)
                    i.thumbs.down.large.outline.grey.icon
    
                .ui.icon.small.input
                    i.tag.icon
                    input.add_tag(type='text')
                each user_tags
                    .ui.label #{this}
                each tags
                    .ui.small.inverted.button.toggle_tag
                        |#{this}
                if rd.selftext_html
                    //- unless tone
                    //- .content
                    |!{parsed_selftext_html}
                    //- |!{rd.selftext_html}
                else
                    if tone
                        .scrolling
                            +tone
                    //- else
                if rd.selftext
                    .content
                        +markdown
                            !{rd.selftext}
                if is_youtube
                    iframe(class=omega_dark_mode_class width="100%" height="300" src="https://www.youtube.com/embed/#{youtube_id}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    //- .invert
                //- if is_twitter
                //-     blockquote(class="twitter-tweet" data-dnt="true" data-theme="dark")
                //-         p(lang="en" dir="ltr")
                //-             |#{title}
                //-             //- |Todayâ€™s Falcon launch carries 2 SpaceX test satellites for global broadband. If successful, Starlink constellation will serve least served.Elon Musk (@elonmusk) 
                //-         a(href="https://twitter.com/elonmusk/status/966298034978959361?ref_src=twsrc%5Etfw")
                //-             |February 21, 2018
                //-     script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")
                //- else if has_thumbnail
                
                    //- if watson
                    //-     +doc_emotion
                    //-     //- +doc_sentiment
                    //-     //- +tone
                
                
                //- if tone
                //-     +tone
                
                //- .four.wide.center.aligned.column
                //- if is_image
                    //- .four.wide.column
                    //- .image
                        //- div(style='position:relative; padding-bottom:calc(125.00% + 44px')
                        //-     iframe.invert(src='https://gfycat.com/ifr/LoathsomeSpottedAlaskanmalamute' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen)                
                    //- img.ui.rounded.fluid.image(src=url class=omega_dark_mode_class)
                //- else 

                //- if title
                //- unless is_youtube 
                //-     unless is_image
                //- if has_thumbnail   
                //-     img.ui.centered.image.inline.rounded(src=thumbnail class=omega_dark_mode_class)
                div
                //- .ui.basic.segment
                .spacer

    
                            
                        
                //- a.ui.tertiary.grey.basic.button(href="https://www.reddit.com/r/#{subreddit}" target="_blank")
                //-     i.reddit.icon
                //-     |r/#{subreddit}
                //- .ui.icon.small.input
                //-     i.tag.icon
                //-     input.add_tag(type='text')
                //- each user_tags
                //-     .ui.label #{this}
            //- if rd.selftext_html
            //-     //- unless tone
            //-     //- .content
            //-     |!{parsed_selftext_html}
            //-     //- |!{rd.selftext_html}
            //- else
            //-     if tone
            //-         +tone
            //-     //- else
            //- if rd.selftext
            //-     .content
            //-         +markdown
            //-             !{rd.selftext}
            //- .ui.tertiary.grey.basic.button.toggle_tags
            //-     i.tags.icon
            //-     |#{tags.length}
            //- if view_tags

            
    .centered.middle.aligned.row.flat
        .sixteen.wide.middle.aligned.column
            //- .ui.hidden.divider
            .ui.center.aligned.middle.aligned.grey.header 
                |sponsored by
                a(href="https://ciomastermind.com/" target="_window")
                    //- |ciomastermind
                    img.ui.small.inline.image(src="https://static1.squarespace.com/static/5e7227fe0a7d0212a00b4e68/t/5e73a2c578579570907dfe02/1591829497276/?format=1500w")
            
