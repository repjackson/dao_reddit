head
    title dao
    script(data-ad-client='ca-pub-5593374176518194' async='' src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js')
    
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="#000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.1/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.1/dist/semantic.min.js')
    //- /* script(async='' src='//embed.redditmedia.com/widgets/platform.js' charset='UTF-8') */


body 
    +home



template(name='home')
    .ui.stackable.padded.grid(class=invert_class)
        .centered.row 
            .sixteen.wide.column
                if subs_ready
                    i.big.yin.yang.grey.icon.toggle_theme(title='dao')
                else 
                    i.big.yin.yang.grey.loading.icon.toggle_theme(title='dao')
                .ui.left.icon.input
                    i.search.icon
                        //- if selected_tags
                        //-     +inputAutocomplete settings=tag_settings id="tag_search" class="" autofocus='' autocomplete="off" 
                        //- else
                    input#search(type='text' autofocus='' autocomplete="off")
                i.circular.remove.link.icon.clear_match(title='clear search')
                i.circular.code.link.icon.print_match
                +tag_cloud
                +facet key='main_emotions' label='emotions' icon='smile'
                +facet key='categories' icon='list'
                +facet key='domain' icon='globe'
                +facet key='subreddit' icon='reddit'
                +facet key='Person' icon='user outline' label='person'
                +facet key='doc_sentiment_label' label='sentiment' icon='smile'
                +facet key='watson_keywords' label='keyword' icon='tags'
                +facet key='watson_concepts' label='concept' icon='cubes'
                +facet key='Location' icon='marker' label='location'
                +facet key='Company' icon='briefcase' label='company'
                +facet key='Facility' icon='building' label='facility'
                +facet key='GeographicFeature' icon='mountain' label='geographic feature'
                +facet key='Sport' icon='basketball ball' label='sport'
                +facet key='SportingEvent' icon='baseball ball' label='sporting event'
                +facet key='Hashtag' icon='hashtag' label='hashtag'
                +facet key='PrintMedia' icon='newspaper' label='print media'
                +facet key='Broadcaster' icon='television' label='broadcaster'
                +facet key='Organization' icon='users' label='organization'
                +facet key='HealthCondition' icon='heart' label='health condition'
                +facet key='author' icon='pencil' label='reddit author'
        .four.wide.column
            .ui.header results stats
            with emotion_average_doc
                span sentiment {{ to_percent sentiment_average }}% 
                div
                    //- .rounded.inverted(style="height:5px;width:{{to_percent sentiment_average}}%;background-color:green" title="{{to_percent sentiment_average}}% sad")
                span {{ to_percent sadness_average }}% sad
                    .rounded.inverted(style="height:5px;width:{{to_percent sadness_average}}%;background-color:blue" title="{{to_percent sadness_average}}% sad")
                span {{ to_percent joy_average }}% joy
                    .rounded.inverted(style="height:5px;width:{{to_percent joy_average}}%;background-color:green" title="{{to_percent joy_average}}% sadness")
                span {{ to_percent disgust_average }}% disgust
                    .rounded.inverted(style="height:5px;width:{{to_percent disgust_average}}%;background-color:orange" title="{{to_percent disgust_average}}% disgust")
                span {{ to_percent fear_average }}% fear
                    .rounded.inverted(style="height:5px;width:{{to_percent fear_average}}%;background-color:black" title="{{to_percent fear_average}}% fear")
                span {{ to_percent anger_average }}% anger
                    .rounded.inverted(style="height:5px;width:{{to_percent anger_average}}%;background-color:red" title="{{to_percent anger_average}}% anger")
            .ui.header ideas 
            each ideas
                +idea_segment
        .twelve.wide.column
            .filter_row(class=loading_class)
                .ui.compact.icon.button.toggle_video(class=toggle_video_class)
                    i.video.icon
                .ui.inline.small.grey.header(title='change sort direction')
                    |sort by
                .ui.compact.small.menu
                    .ui.simple.dropdown.item
                        strong #{current_sort_label}
                        i.dropdown.icon
                        .menu
                            +set_sort_key key='ups' label='upvotes' icon='thumbs up icon' emoji='smile'
                            +set_sort_key key='sadness_percent' label='sadness' emoji='cry' icon='frown outline'
                            +set_sort_key key='joy_percent' label='joy' icon='green smile'
                            +set_sort_key key='fear_percent' label='fear' icon='fear' emoji='fearful'
                            +set_sort_key key='disgust_percent' label='disgust' icon='disgust' emoji='astonished'
                            +set_sort_key key='anger_percent' label='anger' icon='frown' emoji='angry'
                            +set_sort_key key='_timestamp' label='added' icon='clock'
                            +set_sort_key key='doc_sentiment_label' label='sentiment' icon='yin yang' emoji='woman_judge'
                            +set_sort_key key='comment_count' label='comment count' icon='chat'
                .ui.compact.icon.basic.large.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                .ui.inline.small.grey.header
                    |limit
                .ui.compact.menu
                    .ui.simple.dropdown.item
                        strong #{current_doc_limit}
                        i.dropdown.icon
                        .menu
                            +set_limit amount=1
                            +set_limit amount=5
                            +set_limit amount=10
                            +set_limit amount=20
                            +set_limit amount=50
                //- .ui.inline.header
                //-     |search
                .ui.small.input
                    input(type='text' placeholder='filter' val=search_value)
                |&nbsp;
                |&nbsp;
                //- .ui.inline.header view
                //- .ui.compact.menu
                //-     .ui.simple.dropdown.item
                //-         |#{current_delta.view_mode}
                //-         i.dropdown.icon
                //-         .menu
                //-             +set_view_mode title='table' icon='table'
                //-             +set_view_mode title='list' icon='list'
                //-             +set_view_mode title='cards' icon='cards'
                //-             +set_view_mode title='items' icon='list'
                //-             +set_view_mode title='map' icon='map'
                //-             +set_view_mode title='graph' icon='graph'
        
            .largescroll
                each posts
                    +post

template(name='idea_segment')
    .ui.segment
        .ui.small.header name: #{name}
        .ui.small.header key: #{key}
        .ui.small.header doc mentions: #{doc_mention_count}
        .ui.small.header type: #{type}
        .item(title='docs with emotional data to average') docs analyzed #{analyzed_doc_count}
        .item(title='docs with emotional data to average') analyzed ids count #{analyzed_doc_ids.length}
        .item average sentiment
            .large {{to_percent average_sentiment_score}}%
        i.refresh.circular.link.icon.calc_emotion



template(name='set_sort_key')
    .item.set_sort
        if emoji
            em(data-emoji=emoji)
        else if icon
            i.icon(class=icon)
        |#{label}

template(name='set_view_mode')
    .item.set_view
        i.icon(class=icon)
        |#{title}


template(name='set_limit')
    .item.set_limit #{amount}
                    



template(name='tag_cloud')
    //- #cloud
        .ui.left.icon.input
            i.search.icon
            +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    each current_queries
        .ui.active.circular.compact.button.unselect_query
            i.remove.icon
            | #{this}
        
    if selected_tags
        //- #clear_tags.ui.active.icon.compact.small.basic.button
        //-     i.remove.icon
        each selected_tags
            .unselect_tag.ui.active.compact.circular.button
                i.remove.icon
                strong #{this}
    each tags
        .ui.compact.small.basic.button.select_tag(class=cloud_tag_class) 
            strong #{this.name}
    
    
template(name='tag_result')
    .item #{name}

    //- .ui.empty.label(class=color style="min-height:30%")



template(name='facet')
    if top_results.count
        .ui.compact.small.menu
            .ui.simple.dropdown.item
                if icon 
                    i.icon(class=icon)
                if label
                    |#{label}
                else 
                    |#{key}
                .menu
                    each results
                        .item.toggle_filter(class=toggle_filter_class title=count) #{name}
        //- .spacer
