head
    title dao
    script(data-ad-client='ca-pub-5593374176518194' async='' src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js')
    
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="#000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.1/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.1/dist/semantic.min.js')
    script(async='' src='//embed.redditmedia.com/widgets/platform.js' charset='UTF-8')


body 
    +home




template(name='toggle_facet')
    //- .spacer
    //- if count
    //- .ui.large.button.toggle_facet(class=toggle_facet_class)
    //- .ui.large.disabled.button.toggle_facet
    //- .spacer
    .ui.icon.button.toggle_facet(title="toggle #{label}")
        if icon
            i.icon(class=icon)
        //- if count
        //-     |#{count}
        //- if view_label
        | #{label}

template(name='home')
    .ui.stackable.padded.grid(class=invert_class)
        .row 
            .five.wide.column
                i.big.yin.yang.grey.icon.toggle_theme(title='dao')
                .ui.left.icon.input
                    i.search.icon
                        //- if selected_tags
                        //-     +inputAutocomplete settings=tag_settings id="tag_search" class="" autofocus='' autocomplete="off" 
                        //- else
                    input#search(type='text' autofocus='' autocomplete="off")
                +tag_cloud
                .spacer
                with emotion_average_doc
                    span {{ to_percent sadness_average }}% sadness
                        .rounded.inverted(style="height:5px;width:{{to_percent sadness_average}}%;background-color:blue" title="{{to_percent sadness_average}}% sad")
                    span {{ to_percent joy_average }}% joy
                        .rounded.inverted(style="height:5px;width:{{to_percent joy_average}}%;background-color:green" title="{{to_percent joy_average}}% sadness")
                    span {{ to_percent disgust_average }}% disgust
                        .rounded.inverted(style="height:5px;width:{{to_percent disgust_average}}%;background-color:orange" title="{{to_percent disgust_average}}% disgust")
                    span {{ to_percent fear_average }}% fear
                        .rounded.inverted(style="height:5px;width:{{to_percent fear_average}}%;background-color:black" title="{{to_percent fear_average}}% fear")
                    span {{ to_percent anger_average }}% anger
                        .rounded.inverted(style="height:5px;width:{{to_percent anger_average}}%;background-color:red" title="{{to_percent anger_average}}% anger")

                .largescroll
                    +facet key='main_emotions' icon='smile'
                    +facet key='categories' icon='list'
                    +facet key='domain' icon='globe'
                    //- +facet key='subreddit' icon='reddit'
                    +facet key='Person' icon='user outline'
                    +facet key='doc_sentiment_label' label='sentiment' icon='smile'
                    +facet key='watson_keywords' label='keywords' icon='tags'
                    +facet key='watson_concepts' label='concepts' icon='cubes'
                    +facet key='Location' icon='marker'
                    +facet key='Company' icon='briefcase'
                    +facet key='Organization' icon='users'
                    +facet key='HealthCondition' icon='heart'
                    //- +facet key='author' icon='pencil'
            .eleven.wide.column
                .filter_row(class=loading_class)
                    .ui.inline.small.grey.header(title='change sort direction')
                        |sort by
                    .ui.compact.small.menu
                        .ui.simple.dropdown.item
                            strong #{current_sort_label}
                            i.dropdown.icon
                            .menu
                                +set_sort_key key='ups' label='upvotes'
                                +set_sort_key key='_timestamp' label='added'
                                +set_sort_key key='doc_sentiment_label' label='sentiment'
                                +set_sort_key key='comment_count' label='comment count'
                    .ui.compact.icon.basic.large.button.set_sort_direction(title='toggle sort direction')
                        if sorting_up
                            i.sort.amount.down.icon
                        else
                            i.sort.amount.up.icon
                    .ui.compact.icon.basic.large.button.toggle_detail(title='toggle detail')
                        if view_detail 
                            i.stream.icon 
                        else 
                            i.window.minimize.icon
                    |&nbsp;
                    |&nbsp;
                    .ui.inline.small.grey.header
                        |limit
                    .ui.compact.menu
                        .ui.simple.dropdown.item
                            strong #{current_doc_limit}
                            i.dropdown.icon
                            .menu
                                +set_limit amount=1
                                +set_limit amount=5
                                +set_limit amount=10
                                +set_limit amount=20
                                +set_limit amount=50
                    //- .ui.inline.header
                    //-     |search
                    .ui.small.input
                        input(type='text' placeholder='filter' val=search_value)
                    |&nbsp;
                    |&nbsp;
                    //- .ui.inline.header view
                    //- .ui.compact.menu
                    //-     .ui.simple.dropdown.item
                    //-         |#{current_delta.view_mode}
                    //-         i.dropdown.icon
                    //-         .menu
                    //-             +set_view_mode title='table' icon='table'
                    //-             +set_view_mode title='list' icon='list'
                    //-             +set_view_mode title='cards' icon='cards'
                    //-             +set_view_mode title='items' icon='list'
                    //-             +set_view_mode title='map' icon='map'
                    //-             +set_view_mode title='graph' icon='graph'
            
                .largescroll
                    each posts
                        +post

template(name='set_sort_key')
    .item.set_sort
        |#{label}

template(name='set_view_mode')
    .item.set_view
        i.icon(class=icon)
        |#{title}


template(name='set_limit')
    .item.set_limit #{amount}
                    



template(name='tag_cloud')
    //- #cloud
        .ui.left.icon.input
            i.search.icon
            +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    if selected_tags
        //- #clear_tags.ui.active.icon.compact.small.basic.button
        //-     i.remove.icon
        each selected_tags
            .unselect_tag.ui.active.large.compact.small.basic.button
                strong #{this}
    //- each tags
    //-     .ui.compact.small.basic.button.select_tag(class=cloud_tag_class) 
    //-         strong #{this.name}
    
    
template(name='tag_result')
    .item #{name}

template(name='emotion_circle')
    .ui.circular.label(class=emotion_circle_class)
        span {{ to_percent percent }}% #{emotion}
        
    //- .ui.circular.empty.label(class=color style="min-height:30%")

template(name='post')      
    //- .ui.segment   
      
    a.ui.inline.header(href=url target="_window" class=post_header_class) 
        if thumbnail.length
            img.ui.big.image(src=thumbnail)
        else if watson.metadata.image.length
            img.ui.big.image(src=watson.metadata.image)
        if title 
            |#{title}
        else 
            |#{watson.metadata.title}
    //- .emotion_circles(style="height:100px")       
    +emotion_circle color='green' emotion='joy' percent=joy_percent
    //- span {{ to_percent joy_percent }}% joy
    +emotion_circle color='blue' emotion='sadness' percent=sadness_percent
    //- span {{ to_percent sadness_percent}}% sadness
    +emotion_circle color='black' emotion='fear' percent=fear_percent
    //- span {{ to_percent fear_percent }}% fear
    +emotion_circle color='yellow' emotion='disgust' percent=disgust_percent
    //- span {{ to_percent disgust_percent }}% disgust
    +emotion_circle color='red' emotion='anger' percent=anger_percent
    //- span {{ to_percent anger_percent }}% anger
    //- if watson.metadata.
    if is_video
        i.video.icon
        //- img(src=url)
        blockquote.reddit-card
            a(href="https://www.reddit.com#{permalink}")
                i.right.chevron.circular.link.icon
                //- |#{title}
            a(href="http://www.reddit.com/r/#{subreddit}") #{subreddit}
        +call_watson mode='video'
    if is_spotify
        iframe(src="https://open.spotify.com/embed/track/5GQ8H3M5fwIU0oTXO3NmQV" width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media")
    //- 
    //- if in_dev
    div
    if view_detail
        .ui.label(title='reddit author') 
            i.user.outline.icon 
            |#{author}
        .ui.label(title='domain') #{domain}
        a.ui.mini.inline.header(href="http://www.reddit.com#{permalink}" target="_window" title='permalink') #{permalink}
        div
        if tone 
            each tone.result.sentences_tone 
                //- |#{sentence_id}:
                span.large-text(title=sentence_id class=tone_sentence_class) #{text}
                each tones 
                    //- .ui.basic.circular.small.compact.button
                    .ui.small.basic.label {{to_percent score}}% #{tone_id}
                div
        else 
            .large-text    
                |!{body}
                //- |!{html}
        div 
        +array_view key='categories' icon='cubes' 
        +array_view key='Person' icon='users' 
        +array_view key='Company' icon='briefcase' 
        +array_view key='TelevisionShow' icon='television' 
        +array_view key='Broadcaster' icon='video' 
        +array_view key='Facility' icon='building' 
        +array_view key='HealthCondition' icon='heartbeat' 
        +array_view key='Organization' icon='users' 
        +array_view key='Award' icon='trophy' 
        +array_view key='Location' icon='marker'
        +array_view key='PrintMedia' icon='newspaper'
        +array_view key='watson_concepts' icon='cubes'
        +array_view key='watson_keywords' icon='tags'
        div
        |#{ups}
        i.thumbs.up.outline.icon
        |#{downs}
        i.thumbs.up.outline.icon
        .ui.small.inline.header
            |sentiment
            //- |#{doc_sentiment_label}
            |#{doc_sentiment_score}
        span(title='comment_count')
            i.comments.icon
            |#{comment_count}
        .ui.label(title='subreddit')
            i.reddit.icon
            |#{subreddit}
        div
        a(href=url target='_window') #{url}
        +doc_emotion        
    if in_dev
        i.reddit.circular.link.icon.call_reddit_post
        i.code.circular.link.icon.print_this
        i.brain.circular.link.icon.call_tone
        +call_watson mode='url' key='url'
        i.remove.link.icon
    //-     +call_watson mode='html'
    if in_dev 
        i.remove.circular.link.icon
    //-     if watson 
    //-         +jsonView json=watson
    .ui.inline.small.header added #{when}
    .ui.divider


template(name='array_view')
    if values 
        .ui.inline.small.header 
            if icon 
                i.small.grey.icon(class=icon)
            if label
                |#{label}
            else 
                #{key}
        each values 
            .ui.small.compact.circular.button(class=post_label_class)
                |#{this}
        div



template(name='facet')
    .ui.large.compact.circular.button.toggle_facet(class=toggle_facet_class)
        if icon 
            i.icon(class=icon)
        if label
            |#{label}
        else 
            |#{key}
    //- .ui.header results
    if view_facet
        //- .spacer
        each results
            .ui.compact.small.circular.button.toggle_filter(class=toggle_filter_class title=count) #{name}
             //- #{count}
        //- #cloud
            .ui.left.icon.input
                i.search.icon
                +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
            // .ui.hidden.fitted.divider
    .spacer
