head
    title dao
    meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=1.3, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    link(rel="manifest" href="/manifest.json")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")
    //- script(src="https://semantic-ui.com/javascript/library/tablesort.js")

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    script(async src="https://www.googletagmanager.com/gtag/js?id=UA-156965333-1")
    //- script(async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")        
    
    script.
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'UA-156965333-1');

body
    +home
    .ui.divider
    +omega_doc_view

template(name='omega_doc_view')
    with omega_doc
        .ui.segment
            .ui.header query #{query}
        each selected_tags
            .ui.label #{this}
                

template(name='home')
    .ui.stackable.padded.grid.home
        .centered.row 
            .sixteen.wide.column
                //- .scrolling.forty
                //- .ui.header #{connection.status}
                unless connected
                    //- .ui.inline.header disconnected
                    .ui.hidden.divider
                    i.lightning.circular.black.link.big.icon.reconnect 
                if connected
                    //- unless selected_tags
                    //-     i.huge.yin.yang.black.icon
                    unless selected_tags
                            .ui.hidden.divider
                            i.huge.yin.yang.black.link.icon.pick_dao
                    each selected_tags
                        button.ui.black.compact.circular.button.unselect_tag(tabindex='0')
                            //- i.remove.icon
                            | #{this}
                    .ui.left.icon.search.large.input
                        if template_subs_ready
                            i.black.search.icon
                        unless template_subs_ready
                            i.yin.yang.large.loading.icon
                        input#search(type='text' autofocus='' autocomplete="off")
                    //- div
                    //- if selected_tags_plural
                    .ui.icon.circular.black.compact.button.clear_selected_tags
                        i.remove.icon
                    each tags
                        button.ui.compact.white.basic.circular.button.result(tabindex="0" class=result_class title=count) #{title}
                            //- small #{count}
                    //- .ui.hidden.divider
                //- if one_post
            
                //- if selected_tags
        .centered.row 
            //- .scrolling.sixty
            .ui.stackable.padded.grid
                .four.column.row
                    each docs
                        .column
                            +doc_item
                            .ui.hidden.divider
            //-         .sixteen.wide.greecolumn
            //-             |hi
            //- .ui.centered.doubling.cards
            //-     each docs
            //-         //- .ui.fitted.hidden.divider
            //-         +doc_item


template(name='doc_item')
    //- .ui.center.aligned.basic.compact.segment
    
    //- .ui.inverted.card
        //- img.image.rounded(src=url)
        //- .invert
        //-     blockquote(class="reddit-card" data-card-created="1591519131")
                //- a.invert(href="https://www.reddit.com/r/CryptoCurrency/comments/fxf0bz/reddit_is_implementing_a_points_system_on_the/")
                //-     |#{title}
                //- |from 
                //- a(href="http://www.reddit.com/r/CryptoCurrency")
                //-     |r/CryptoCurrency
    .content.invert
        if title 
            a#title.ui.yeah.header(href=url target='_window') !{lowered_title}
            .spacer
            //- a.ui.pointer.header(title="view full" href=url target='_window') !{title}
            //- .ui.header.pointer.goto_article(title="view full") !{title}
        else if watson.metadata.title
            .ui.middle.aligned.header.pointer.goto_article !{watson.metadata.title}
        if is_youtube
            iframe(width="100%" height="300" src="https://www.youtube.com/embed/#{youtube_id}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
            //- .invert
        //- if is_twitter
        //-     blockquote(class="twitter-tweet" data-dnt="true" data-theme="dark")
        //-         p(lang="en" dir="ltr")
        //-             |#{title}
        //-             //- |Todayâ€™s Falcon launch carries 2 SpaceX test satellites for global broadband. If successful, Starlink constellation will serve least served.Elon Musk (@elonmusk) 
        //-         a(href="https://twitter.com/elonmusk/status/966298034978959361?ref_src=twsrc%5Etfw")
        //-             |February 21, 2018
        //-     script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")
        //- else if has_thumbnail
        
        if is_image
            //- .four.wide.center.aligned.column
            //- .image
                //- div(style='position:relative; padding-bottom:calc(125.00% + 44px')
                //-     iframe.invert(src='https://gfycat.com/ifr/LoathsomeSpottedAlaskanmalamute' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen)                
            img.ui.rounded.fluid.image(src=url)
        else if has_thumbnail    
            img.rounded(src=thumbnail)
        .spacer
        .content
            .meta
                .ui.small.inverted.link.horizontal.black.list
                    //- a.item(href="https://www.reddit.com/user/#{author}" target="_blank")
                    //-     i.black.user.outline.icon
                    //-     |#{author}
                    .item
                        //- i.black.globe.icon
                        |#{domain}
                    a.item(href="https://www.reddit.com/#{permalink}" target="_blank")
                        i.black.chat.outline.icon
                        |#{comment_count}
                    a.item(href="https://www.reddit.com/r/#{subreddit}" target="_blank")
                        //- i.black.reddit.icon
                        |r/#{subreddit}
                    //- .item
                    //-     i.black.thumbs.up.icon
                    //-     |#{ups}
                    
                //-     if dev
                //-         .ui.small.inline.black.header 
                //-             i.tags.small.icon
                //-             |#{tags.length}
    
